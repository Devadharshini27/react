{"ast":null,"code":"import _asyncToGenerator from\"C:/Users/G.DEVADHARSHINI/OneDrive/weather-react/weather-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _classCallCheck from\"C:/Users/G.DEVADHARSHINI/OneDrive/weather-react/weather-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"C:/Users/G.DEVADHARSHINI/OneDrive/weather-react/weather-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"C:/Users/G.DEVADHARSHINI/OneDrive/weather-react/weather-app/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"C:/Users/G.DEVADHARSHINI/OneDrive/weather-react/weather-app/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\G.DEVADHARSHINI\\\\OneDrive\\\\weather-react\\\\weather-app\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import React from\"react\";import\"./App.css\";import Form from\"./app_component/form.component\";import Weather from\"./app_component/weather.component\";import\"bootstrap/dist/css/bootstrap.min.css\";// git project https://github.com/erikflowers/weather-icons\nimport\"weather-icons/css/weather-icons.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Api_Key=\"429736441cf3572838aa10530929f7cd\";var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);var _super=_createSuper(App);function App(){var _this;_classCallCheck(this,App);_this=_super.call(this);_this.getWeather=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){var country,city,api_call,response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();country=e.target.elements.country.value;city=e.target.elements.city.value;if(!(country&&city)){_context.next=15;break;}_context.next=6;return fetch(\"http://api.openweathermap.org/data/2.5/weather?q=\".concat(city,\",\").concat(country,\"&appid=\").concat(Api_Key));case 6:api_call=_context.sent;_context.next=9;return api_call.json();case 9:response=_context.sent;_this.setState({city:\"\".concat(response.name,\", \").concat(response.sys.country),country:response.sys.country,main:response.weather[0].main,celsius:_this.calCelsius(response.main.temp),temp_max:_this.calCelsius(response.main.temp_max),temp_min:_this.calCelsius(response.main.temp_min),description:response.weather[0].description,error:false});// seting icons\n_this.get_WeatherIcon(_this.weatherIcon,response.weather[0].id);console.log(response);_context.next=16;break;case 15:_this.setState({error:true});case 16:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();_this.state={city:undefined,country:undefined,icon:undefined,main:undefined,celsius:undefined,temp_max:null,temp_min:null,description:\"\",error:false};_this.weatherIcon={Thunderstorm:\"wi-thunderstorm\",Drizzle:\"wi-sleet\",Rain:\"wi-storm-showers\",Snow:\"wi-snow\",Atmosphere:\"wi-fog\",Clear:\"wi-day-sunny\",Clouds:\"wi-day-fog\"};return _this;}_createClass(App,[{key:\"get_WeatherIcon\",value:function get_WeatherIcon(icons,rangeId){switch(true){case rangeId>=200&&rangeId<232:this.setState({icon:icons.Thunderstorm});break;case rangeId>=300&&rangeId<=321:this.setState({icon:icons.Drizzle});break;case rangeId>=500&&rangeId<=521:this.setState({icon:icons.Rain});break;case rangeId>=600&&rangeId<=622:this.setState({icon:icons.Snow});break;case rangeId>=701&&rangeId<=781:this.setState({icon:icons.Atmosphere});break;case rangeId===800:this.setState({icon:icons.Clear});break;case rangeId>=801&&rangeId<=804:this.setState({icon:icons.Clouds});break;default:this.setState({icon:icons.Clouds});}}},{key:\"calCelsius\",value:function calCelsius(temp){var cell=Math.floor(temp-273.15);return cell;}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(Form,{loadweather:this.getWeather,error:this.state.error}),/*#__PURE__*/_jsx(Weather,{cityname:this.state.city,weatherIcon:this.state.icon,temp_celsius:this.state.celsius,temp_max:this.state.temp_max,temp_min:this.state.temp_min,description:this.state.description})]});}}]);return App;}(React.Component);export default App;","map":{"version":3,"sources":["C:/Users/G.DEVADHARSHINI/OneDrive/weather-react/weather-app/src/App.js"],"names":["React","Form","Weather","Api_Key","App","getWeather","e","preventDefault","country","target","elements","value","city","fetch","api_call","json","response","setState","name","sys","main","weather","celsius","calCelsius","temp","temp_max","temp_min","description","error","get_WeatherIcon","weatherIcon","id","console","log","state","undefined","icon","Thunderstorm","Drizzle","Rain","Snow","Atmosphere","Clear","Clouds","icons","rangeId","cell","Math","floor","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport Form from \"./app_component/form.component\";\nimport Weather from \"./app_component/weather.component\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n// git project https://github.com/erikflowers/weather-icons\nimport \"weather-icons/css/weather-icons.css\";\n\nconst Api_Key = \"429736441cf3572838aa10530929f7cd\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      city: undefined,\n      country: undefined,\n      icon: undefined,\n      main: undefined,\n      celsius: undefined,\n      temp_max: null,\n      temp_min: null,\n      description: \"\",\n      error: false\n    };\n\n    this.weatherIcon = {\n      Thunderstorm: \"wi-thunderstorm\",\n      Drizzle: \"wi-sleet\",\n      Rain: \"wi-storm-showers\",\n      Snow: \"wi-snow\",\n      Atmosphere: \"wi-fog\",\n      Clear: \"wi-day-sunny\",\n      Clouds: \"wi-day-fog\"\n    };\n  }\n\n  get_WeatherIcon(icons, rangeId) {\n    switch (true) {\n      case rangeId >= 200 && rangeId < 232:\n        this.setState({ icon: icons.Thunderstorm });\n        break;\n      case rangeId >= 300 && rangeId <= 321:\n        this.setState({ icon: icons.Drizzle });\n        break;\n      case rangeId >= 500 && rangeId <= 521:\n        this.setState({ icon: icons.Rain });\n        break;\n      case rangeId >= 600 && rangeId <= 622:\n        this.setState({ icon: icons.Snow });\n        break;\n      case rangeId >= 701 && rangeId <= 781:\n        this.setState({ icon: icons.Atmosphere });\n        break;\n      case rangeId === 800:\n        this.setState({ icon: icons.Clear });\n        break;\n      case rangeId >= 801 && rangeId <= 804:\n        this.setState({ icon: icons.Clouds });\n        break;\n      default:\n        this.setState({ icon: icons.Clouds });\n    }\n  }\n\n  calCelsius(temp) {\n    let cell = Math.floor(temp - 273.15);\n    return cell;\n  }\n\n  getWeather = async e => {\n    e.preventDefault();\n\n    const country = e.target.elements.country.value;\n    const city = e.target.elements.city.value;\n\n    if (country && city) {\n      const api_call = await fetch(\n        `http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${Api_Key}`\n      );\n\n      const response = await api_call.json();\n\n      this.setState({\n        city: `${response.name}, ${response.sys.country}`,\n        country: response.sys.country,\n        main: response.weather[0].main,\n        celsius: this.calCelsius(response.main.temp),\n        temp_max: this.calCelsius(response.main.temp_max),\n        temp_min: this.calCelsius(response.main.temp_min),\n        description: response.weather[0].description,\n        error: false\n      });\n\n      // seting icons\n      this.get_WeatherIcon(this.weatherIcon, response.weather[0].id);\n\n      console.log(response);\n    } else {\n      this.setState({\n        error: true\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Form loadweather={this.getWeather} error={this.state.error} />\n        <Weather\n          cityname={this.state.city}\n          weatherIcon={this.state.icon}\n          temp_celsius={this.state.celsius}\n          temp_max={this.state.temp_max}\n          temp_min={this.state.temp_min}\n          description={this.state.description}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}